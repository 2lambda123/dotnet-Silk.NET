name: CI Test
on:
    push:
        branches:
            - "main"
            - "release/*"
    pull_request:
        # any
jobs:
    Test:
        strategy:
            fail-fast: false
            matrix:
                # as of writing (10th July 2022) there are only x86_64 machines
                include:
                    # windows version independent RIDs.
                    # testing version-specific RIDs seems unreasonable given no clear & obvious mapping
                    # between datacenter versions and home versions
                    - rid: win-x64
                      os: windows-latest
                    - rid: win-x86
                      os: windows-latest
                    
                    # given there appear to be significant differences
                    # we test all available ubuntu versions here
                    # if this causes significant slow downs, remove
                    
                    # no clangsharp support https://github.com/dotnet/ClangSharp/issues/364
                    # - rid: linux-x64
                    #  os: ubuntu-22.04
                    
                    - rid: ubuntu.20.04-x64
                      os: ubuntu-20.04
                    
                    # Ubuntu raises an SEH exception, see https://discord.com/channels/521092042781229087/1004867182787838043/1004887853500739684
                    # - rid: ubuntu.18.04-x64
                    #   os: ubuntu-18.04
                    
                    # macos 10.15 is not tested as the runner image is deprecated.
                    # view https://github.com/actions/virtual-environments/blob/main/images/macos/ files for info on xcode sdk versions
                    - rid: osx.12-x64
                      os: macos-12
                      xcode-sdk: macosx12.3 # macos-12 image is currently (5th August 2022) on MacOS 12.5 but the latest sdk is macosx12.3
                      
                    - rid: osx.11.0-x64
                      os: macos-11
                      xcode-sdk: macosx11.3
        runs-on: ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v3
              with:
                  submodules: "true"
            - name: Setup .NET
              uses: actions/setup-dotnet@v2
            - name: Restore
              run: dotnet restore --runtime ${{ matrix.rid }}
            # Build can't be done in a separate step as building for a specific runtime & configuration is unsupported for some reason...
            # https://github.com/dotnet/sdk/issues/14281
            # doing the same (building for a specific configuration and runtime is supported via dotnet test)
            - name: Test
              run: dotnet test -c Release --no-restore --runtime ${{ matrix.rid }}
              env:
                DOTNET_SCRAPER__XCODE_SDK: ${{ matrix.xcode-sdk }}
