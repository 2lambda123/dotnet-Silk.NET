// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

/*

This file is automatically generated by T4 template

*/


using System;
using System.Runtime.CompilerServices;
using System.Numerics;

// casting into non-nullable, unboxing from nullable  
#pragma warning disable 8600
#pragma warning disable 8605


namespace Silk.NET.Maths
{
    /// <summary>
    /// A collection of operations for working with scalar numeric values.
    /// Includes methods like the ones found in <see cref="Math"/> and more.
    /// Supports <see cref="Half" />, <see cref="float" />, <see cref="double" />, <see cref="decimal" />, <see cref="sbyte" />, <see cref="byte" />, <see cref="short" />, <see cref="ushort" />, <see cref="int" />, <see cref="uint" />, <see cref="long" />, <see cref="ulong" />, <see cref="Complex" />, <see cref="BigInteger" />
    /// </summary>
    /// <seealso cref="Scalar{T}"/>
    public partial class Scalar
    { // this is not a whitespace change please run CI
        /// <summary>
        /// Convert <paramref name="val"/> from <typeparamref name="TFrom"/> to <typeparamref name="TTo"/>
        /// </summary>
        /// <param name="val">The value to convert</param>
        /// <typeparam name="TFrom">The type converted from</typeparam>
        /// <typeparam name="TTo">The type converted into</typeparam>
        /// <remark>
        /// While in most cases the types can be just explicitly casted,
        /// sometimes there is an intermediate cast to float or double.
        /// </remark>
        /// <remark>
        /// In case of <see cref="Complex" /> we only consider the real part.
        /// </remark>
        /// <returns>The converted value</returns>
        [MethodImpl(MaxOpt)]
        public static TTo As<TFrom, TTo>(TFrom val) where TFrom : notnull where TTo : notnull
        {   
            if (typeof(TFrom) == typeof(Half))
            {
                return FromHalf((Half) (object) val);
            }

            [MethodImpl(MaxOpt)]
            static TTo FromHalf(Half val)
            {
                if (typeof(TTo) == typeof(Half))
                {
                    return (TTo) (object) (Half) val;
                }
                if (typeof(TTo) == typeof(float))
                {
                    return (TTo) (object) (float) val;
                }
                if (typeof(TTo) == typeof(double))
                {
                    return (TTo) (object) (double) val;
                }
                if (typeof(TTo) == typeof(decimal))
                {
                    return (TTo) (object) (decimal) (float) val;
                }
                if (typeof(TTo) == typeof(sbyte))
                {
                    return (TTo) (object) (sbyte) val;
                }
                if (typeof(TTo) == typeof(byte))
                {
                    return (TTo) (object) (byte) val;
                }
                if (typeof(TTo) == typeof(short))
                {
                    return (TTo) (object) (short) val;
                }
                if (typeof(TTo) == typeof(ushort))
                {
                    return (TTo) (object) (ushort) val;
                }
                if (typeof(TTo) == typeof(int))
                {
                    return (TTo) (object) (int) val;
                }
                if (typeof(TTo) == typeof(uint))
                {
                    return (TTo) (object) (uint) val;
                }
                if (typeof(TTo) == typeof(long))
                {
                    return (TTo) (object) (long) val;
                }
                if (typeof(TTo) == typeof(ulong))
                {
                    return (TTo) (object) (ulong) val;
                }
                if (typeof(TTo) == typeof(Complex))
                {
                    return (TTo) (object) (Complex) (float) val;
                }
                if (typeof(TTo) == typeof(BigInteger))
                {
                    return (TTo) (object) (BigInteger) (float) val;
                }

                ThrowUnsupportedType();
                return default!;
            }

            if (typeof(TFrom) == typeof(float))
            {
                return FromFloat((float) (object) val);
            }

            [MethodImpl(MaxOpt)]
            static TTo FromFloat(float val)
            {
                if (typeof(TTo) == typeof(Half))
                {
                    return (TTo) (object) (Half) val;
                }
                if (typeof(TTo) == typeof(float))
                {
                    return (TTo) (object) (float) val;
                }
                if (typeof(TTo) == typeof(double))
                {
                    return (TTo) (object) (double) val;
                }
                if (typeof(TTo) == typeof(decimal))
                {
                    return (TTo) (object) (decimal) val;
                }
                if (typeof(TTo) == typeof(sbyte))
                {
                    return (TTo) (object) (sbyte) val;
                }
                if (typeof(TTo) == typeof(byte))
                {
                    return (TTo) (object) (byte) val;
                }
                if (typeof(TTo) == typeof(short))
                {
                    return (TTo) (object) (short) val;
                }
                if (typeof(TTo) == typeof(ushort))
                {
                    return (TTo) (object) (ushort) val;
                }
                if (typeof(TTo) == typeof(int))
                {
                    return (TTo) (object) (int) val;
                }
                if (typeof(TTo) == typeof(uint))
                {
                    return (TTo) (object) (uint) val;
                }
                if (typeof(TTo) == typeof(long))
                {
                    return (TTo) (object) (long) val;
                }
                if (typeof(TTo) == typeof(ulong))
                {
                    return (TTo) (object) (ulong) val;
                }
                if (typeof(TTo) == typeof(Complex))
                {
                    return (TTo) (object) (Complex) val;
                }
                if (typeof(TTo) == typeof(BigInteger))
                {
                    return (TTo) (object) (BigInteger) val;
                }

                ThrowUnsupportedType();
                return default!;
            }

            if (typeof(TFrom) == typeof(double))
            {
                return FromDouble((double) (object) val);
            }

            [MethodImpl(MaxOpt)]
            static TTo FromDouble(double val)
            {
                if (typeof(TTo) == typeof(Half))
                {
                    return (TTo) (object) (Half) val;
                }
                if (typeof(TTo) == typeof(float))
                {
                    return (TTo) (object) (float) val;
                }
                if (typeof(TTo) == typeof(double))
                {
                    return (TTo) (object) (double) val;
                }
                if (typeof(TTo) == typeof(decimal))
                {
                    return (TTo) (object) (decimal) val;
                }
                if (typeof(TTo) == typeof(sbyte))
                {
                    return (TTo) (object) (sbyte) val;
                }
                if (typeof(TTo) == typeof(byte))
                {
                    return (TTo) (object) (byte) val;
                }
                if (typeof(TTo) == typeof(short))
                {
                    return (TTo) (object) (short) val;
                }
                if (typeof(TTo) == typeof(ushort))
                {
                    return (TTo) (object) (ushort) val;
                }
                if (typeof(TTo) == typeof(int))
                {
                    return (TTo) (object) (int) val;
                }
                if (typeof(TTo) == typeof(uint))
                {
                    return (TTo) (object) (uint) val;
                }
                if (typeof(TTo) == typeof(long))
                {
                    return (TTo) (object) (long) val;
                }
                if (typeof(TTo) == typeof(ulong))
                {
                    return (TTo) (object) (ulong) val;
                }
                if (typeof(TTo) == typeof(Complex))
                {
                    return (TTo) (object) (Complex) val;
                }
                if (typeof(TTo) == typeof(BigInteger))
                {
                    return (TTo) (object) (BigInteger) val;
                }

                ThrowUnsupportedType();
                return default!;
            }

            if (typeof(TFrom) == typeof(decimal))
            {
                return FromDecimal((decimal) (object) val);
            }

            [MethodImpl(MaxOpt)]
            static TTo FromDecimal(decimal val)
            {
                if (typeof(TTo) == typeof(Half))
                {
                    return (TTo) (object) (Half) (double) val;
                }
                if (typeof(TTo) == typeof(float))
                {
                    return (TTo) (object) (float) val;
                }
                if (typeof(TTo) == typeof(double))
                {
                    return (TTo) (object) (double) val;
                }
                if (typeof(TTo) == typeof(decimal))
                {
                    return (TTo) (object) (decimal) val;
                }
                if (typeof(TTo) == typeof(sbyte))
                {
                    return (TTo) (object) (sbyte) val;
                }
                if (typeof(TTo) == typeof(byte))
                {
                    return (TTo) (object) (byte) val;
                }
                if (typeof(TTo) == typeof(short))
                {
                    return (TTo) (object) (short) val;
                }
                if (typeof(TTo) == typeof(ushort))
                {
                    return (TTo) (object) (ushort) val;
                }
                if (typeof(TTo) == typeof(int))
                {
                    return (TTo) (object) (int) val;
                }
                if (typeof(TTo) == typeof(uint))
                {
                    return (TTo) (object) (uint) val;
                }
                if (typeof(TTo) == typeof(long))
                {
                    return (TTo) (object) (long) val;
                }
                if (typeof(TTo) == typeof(ulong))
                {
                    return (TTo) (object) (ulong) val;
                }
                if (typeof(TTo) == typeof(Complex))
                {
                    return (TTo) (object) (Complex) val;
                }
                if (typeof(TTo) == typeof(BigInteger))
                {
                    return (TTo) (object) (BigInteger) val;
                }

                ThrowUnsupportedType();
                return default!;
            }

            if (typeof(TFrom) == typeof(sbyte))
            {
                return FromSByte((sbyte) (object) val);
            }

            [MethodImpl(MaxOpt)]
            static TTo FromSByte(sbyte val)
            {
                if (typeof(TTo) == typeof(Half))
                {
                    return (TTo) (object) (Half) val;
                }
                if (typeof(TTo) == typeof(float))
                {
                    return (TTo) (object) (float) val;
                }
                if (typeof(TTo) == typeof(double))
                {
                    return (TTo) (object) (double) val;
                }
                if (typeof(TTo) == typeof(decimal))
                {
                    return (TTo) (object) (decimal) val;
                }
                if (typeof(TTo) == typeof(sbyte))
                {
                    return (TTo) (object) (sbyte) val;
                }
                if (typeof(TTo) == typeof(byte))
                {
                    return (TTo) (object) (byte) val;
                }
                if (typeof(TTo) == typeof(short))
                {
                    return (TTo) (object) (short) val;
                }
                if (typeof(TTo) == typeof(ushort))
                {
                    return (TTo) (object) (ushort) val;
                }
                if (typeof(TTo) == typeof(int))
                {
                    return (TTo) (object) (int) val;
                }
                if (typeof(TTo) == typeof(uint))
                {
                    return (TTo) (object) (uint) val;
                }
                if (typeof(TTo) == typeof(long))
                {
                    return (TTo) (object) (long) val;
                }
                if (typeof(TTo) == typeof(ulong))
                {
                    return (TTo) (object) (ulong) val;
                }
                if (typeof(TTo) == typeof(Complex))
                {
                    return (TTo) (object) (Complex) val;
                }
                if (typeof(TTo) == typeof(BigInteger))
                {
                    return (TTo) (object) (BigInteger) val;
                }

                ThrowUnsupportedType();
                return default!;
            }

            if (typeof(TFrom) == typeof(byte))
            {
                return FromByte((byte) (object) val);
            }

            [MethodImpl(MaxOpt)]
            static TTo FromByte(byte val)
            {
                if (typeof(TTo) == typeof(Half))
                {
                    return (TTo) (object) (Half) val;
                }
                if (typeof(TTo) == typeof(float))
                {
                    return (TTo) (object) (float) val;
                }
                if (typeof(TTo) == typeof(double))
                {
                    return (TTo) (object) (double) val;
                }
                if (typeof(TTo) == typeof(decimal))
                {
                    return (TTo) (object) (decimal) val;
                }
                if (typeof(TTo) == typeof(sbyte))
                {
                    return (TTo) (object) (sbyte) val;
                }
                if (typeof(TTo) == typeof(byte))
                {
                    return (TTo) (object) (byte) val;
                }
                if (typeof(TTo) == typeof(short))
                {
                    return (TTo) (object) (short) val;
                }
                if (typeof(TTo) == typeof(ushort))
                {
                    return (TTo) (object) (ushort) val;
                }
                if (typeof(TTo) == typeof(int))
                {
                    return (TTo) (object) (int) val;
                }
                if (typeof(TTo) == typeof(uint))
                {
                    return (TTo) (object) (uint) val;
                }
                if (typeof(TTo) == typeof(long))
                {
                    return (TTo) (object) (long) val;
                }
                if (typeof(TTo) == typeof(ulong))
                {
                    return (TTo) (object) (ulong) val;
                }
                if (typeof(TTo) == typeof(Complex))
                {
                    return (TTo) (object) (Complex) val;
                }
                if (typeof(TTo) == typeof(BigInteger))
                {
                    return (TTo) (object) (BigInteger) val;
                }

                ThrowUnsupportedType();
                return default!;
            }

            if (typeof(TFrom) == typeof(short))
            {
                return FromShort((short) (object) val);
            }

            [MethodImpl(MaxOpt)]
            static TTo FromShort(short val)
            {
                if (typeof(TTo) == typeof(Half))
                {
                    return (TTo) (object) (Half) val;
                }
                if (typeof(TTo) == typeof(float))
                {
                    return (TTo) (object) (float) val;
                }
                if (typeof(TTo) == typeof(double))
                {
                    return (TTo) (object) (double) val;
                }
                if (typeof(TTo) == typeof(decimal))
                {
                    return (TTo) (object) (decimal) val;
                }
                if (typeof(TTo) == typeof(sbyte))
                {
                    return (TTo) (object) (sbyte) val;
                }
                if (typeof(TTo) == typeof(byte))
                {
                    return (TTo) (object) (byte) val;
                }
                if (typeof(TTo) == typeof(short))
                {
                    return (TTo) (object) (short) val;
                }
                if (typeof(TTo) == typeof(ushort))
                {
                    return (TTo) (object) (ushort) val;
                }
                if (typeof(TTo) == typeof(int))
                {
                    return (TTo) (object) (int) val;
                }
                if (typeof(TTo) == typeof(uint))
                {
                    return (TTo) (object) (uint) val;
                }
                if (typeof(TTo) == typeof(long))
                {
                    return (TTo) (object) (long) val;
                }
                if (typeof(TTo) == typeof(ulong))
                {
                    return (TTo) (object) (ulong) val;
                }
                if (typeof(TTo) == typeof(Complex))
                {
                    return (TTo) (object) (Complex) val;
                }
                if (typeof(TTo) == typeof(BigInteger))
                {
                    return (TTo) (object) (BigInteger) val;
                }

                ThrowUnsupportedType();
                return default!;
            }

            if (typeof(TFrom) == typeof(ushort))
            {
                return FromUShort((ushort) (object) val);
            }

            [MethodImpl(MaxOpt)]
            static TTo FromUShort(ushort val)
            {
                if (typeof(TTo) == typeof(Half))
                {
                    return (TTo) (object) (Half) val;
                }
                if (typeof(TTo) == typeof(float))
                {
                    return (TTo) (object) (float) val;
                }
                if (typeof(TTo) == typeof(double))
                {
                    return (TTo) (object) (double) val;
                }
                if (typeof(TTo) == typeof(decimal))
                {
                    return (TTo) (object) (decimal) val;
                }
                if (typeof(TTo) == typeof(sbyte))
                {
                    return (TTo) (object) (sbyte) val;
                }
                if (typeof(TTo) == typeof(byte))
                {
                    return (TTo) (object) (byte) val;
                }
                if (typeof(TTo) == typeof(short))
                {
                    return (TTo) (object) (short) val;
                }
                if (typeof(TTo) == typeof(ushort))
                {
                    return (TTo) (object) (ushort) val;
                }
                if (typeof(TTo) == typeof(int))
                {
                    return (TTo) (object) (int) val;
                }
                if (typeof(TTo) == typeof(uint))
                {
                    return (TTo) (object) (uint) val;
                }
                if (typeof(TTo) == typeof(long))
                {
                    return (TTo) (object) (long) val;
                }
                if (typeof(TTo) == typeof(ulong))
                {
                    return (TTo) (object) (ulong) val;
                }
                if (typeof(TTo) == typeof(Complex))
                {
                    return (TTo) (object) (Complex) val;
                }
                if (typeof(TTo) == typeof(BigInteger))
                {
                    return (TTo) (object) (BigInteger) val;
                }

                ThrowUnsupportedType();
                return default!;
            }

            if (typeof(TFrom) == typeof(int))
            {
                return FromInt((int) (object) val);
            }

            [MethodImpl(MaxOpt)]
            static TTo FromInt(int val)
            {
                if (typeof(TTo) == typeof(Half))
                {
                    return (TTo) (object) (Half) val;
                }
                if (typeof(TTo) == typeof(float))
                {
                    return (TTo) (object) (float) val;
                }
                if (typeof(TTo) == typeof(double))
                {
                    return (TTo) (object) (double) val;
                }
                if (typeof(TTo) == typeof(decimal))
                {
                    return (TTo) (object) (decimal) val;
                }
                if (typeof(TTo) == typeof(sbyte))
                {
                    return (TTo) (object) (sbyte) val;
                }
                if (typeof(TTo) == typeof(byte))
                {
                    return (TTo) (object) (byte) val;
                }
                if (typeof(TTo) == typeof(short))
                {
                    return (TTo) (object) (short) val;
                }
                if (typeof(TTo) == typeof(ushort))
                {
                    return (TTo) (object) (ushort) val;
                }
                if (typeof(TTo) == typeof(int))
                {
                    return (TTo) (object) (int) val;
                }
                if (typeof(TTo) == typeof(uint))
                {
                    return (TTo) (object) (uint) val;
                }
                if (typeof(TTo) == typeof(long))
                {
                    return (TTo) (object) (long) val;
                }
                if (typeof(TTo) == typeof(ulong))
                {
                    return (TTo) (object) (ulong) val;
                }
                if (typeof(TTo) == typeof(Complex))
                {
                    return (TTo) (object) (Complex) val;
                }
                if (typeof(TTo) == typeof(BigInteger))
                {
                    return (TTo) (object) (BigInteger) val;
                }

                ThrowUnsupportedType();
                return default!;
            }

            if (typeof(TFrom) == typeof(uint))
            {
                return FromUInt((uint) (object) val);
            }

            [MethodImpl(MaxOpt)]
            static TTo FromUInt(uint val)
            {
                if (typeof(TTo) == typeof(Half))
                {
                    return (TTo) (object) (Half) val;
                }
                if (typeof(TTo) == typeof(float))
                {
                    return (TTo) (object) (float) val;
                }
                if (typeof(TTo) == typeof(double))
                {
                    return (TTo) (object) (double) val;
                }
                if (typeof(TTo) == typeof(decimal))
                {
                    return (TTo) (object) (decimal) val;
                }
                if (typeof(TTo) == typeof(sbyte))
                {
                    return (TTo) (object) (sbyte) val;
                }
                if (typeof(TTo) == typeof(byte))
                {
                    return (TTo) (object) (byte) val;
                }
                if (typeof(TTo) == typeof(short))
                {
                    return (TTo) (object) (short) val;
                }
                if (typeof(TTo) == typeof(ushort))
                {
                    return (TTo) (object) (ushort) val;
                }
                if (typeof(TTo) == typeof(int))
                {
                    return (TTo) (object) (int) val;
                }
                if (typeof(TTo) == typeof(uint))
                {
                    return (TTo) (object) (uint) val;
                }
                if (typeof(TTo) == typeof(long))
                {
                    return (TTo) (object) (long) val;
                }
                if (typeof(TTo) == typeof(ulong))
                {
                    return (TTo) (object) (ulong) val;
                }
                if (typeof(TTo) == typeof(Complex))
                {
                    return (TTo) (object) (Complex) val;
                }
                if (typeof(TTo) == typeof(BigInteger))
                {
                    return (TTo) (object) (BigInteger) val;
                }

                ThrowUnsupportedType();
                return default!;
            }

            if (typeof(TFrom) == typeof(long))
            {
                return FromLong((long) (object) val);
            }

            [MethodImpl(MaxOpt)]
            static TTo FromLong(long val)
            {
                if (typeof(TTo) == typeof(Half))
                {
                    return (TTo) (object) (Half) val;
                }
                if (typeof(TTo) == typeof(float))
                {
                    return (TTo) (object) (float) val;
                }
                if (typeof(TTo) == typeof(double))
                {
                    return (TTo) (object) (double) val;
                }
                if (typeof(TTo) == typeof(decimal))
                {
                    return (TTo) (object) (decimal) val;
                }
                if (typeof(TTo) == typeof(sbyte))
                {
                    return (TTo) (object) (sbyte) val;
                }
                if (typeof(TTo) == typeof(byte))
                {
                    return (TTo) (object) (byte) val;
                }
                if (typeof(TTo) == typeof(short))
                {
                    return (TTo) (object) (short) val;
                }
                if (typeof(TTo) == typeof(ushort))
                {
                    return (TTo) (object) (ushort) val;
                }
                if (typeof(TTo) == typeof(int))
                {
                    return (TTo) (object) (int) val;
                }
                if (typeof(TTo) == typeof(uint))
                {
                    return (TTo) (object) (uint) val;
                }
                if (typeof(TTo) == typeof(long))
                {
                    return (TTo) (object) (long) val;
                }
                if (typeof(TTo) == typeof(ulong))
                {
                    return (TTo) (object) (ulong) val;
                }
                if (typeof(TTo) == typeof(Complex))
                {
                    return (TTo) (object) (Complex) val;
                }
                if (typeof(TTo) == typeof(BigInteger))
                {
                    return (TTo) (object) (BigInteger) val;
                }

                ThrowUnsupportedType();
                return default!;
            }

            if (typeof(TFrom) == typeof(ulong))
            {
                return FromULong((ulong) (object) val);
            }

            [MethodImpl(MaxOpt)]
            static TTo FromULong(ulong val)
            {
                if (typeof(TTo) == typeof(Half))
                {
                    return (TTo) (object) (Half) val;
                }
                if (typeof(TTo) == typeof(float))
                {
                    return (TTo) (object) (float) val;
                }
                if (typeof(TTo) == typeof(double))
                {
                    return (TTo) (object) (double) val;
                }
                if (typeof(TTo) == typeof(decimal))
                {
                    return (TTo) (object) (decimal) val;
                }
                if (typeof(TTo) == typeof(sbyte))
                {
                    return (TTo) (object) (sbyte) val;
                }
                if (typeof(TTo) == typeof(byte))
                {
                    return (TTo) (object) (byte) val;
                }
                if (typeof(TTo) == typeof(short))
                {
                    return (TTo) (object) (short) val;
                }
                if (typeof(TTo) == typeof(ushort))
                {
                    return (TTo) (object) (ushort) val;
                }
                if (typeof(TTo) == typeof(int))
                {
                    return (TTo) (object) (int) val;
                }
                if (typeof(TTo) == typeof(uint))
                {
                    return (TTo) (object) (uint) val;
                }
                if (typeof(TTo) == typeof(long))
                {
                    return (TTo) (object) (long) val;
                }
                if (typeof(TTo) == typeof(ulong))
                {
                    return (TTo) (object) (ulong) val;
                }
                if (typeof(TTo) == typeof(Complex))
                {
                    return (TTo) (object) (Complex) val;
                }
                if (typeof(TTo) == typeof(BigInteger))
                {
                    return (TTo) (object) (BigInteger) val;
                }

                ThrowUnsupportedType();
                return default!;
            }

            if (typeof(TFrom) == typeof(Complex))
            {
                return FromComplex((Complex) (object) val);
            }

            [MethodImpl(MaxOpt)]
            static TTo FromComplex(Complex val)
            {
                if (typeof(TTo) == typeof(Half))
                {
                    return (TTo) (object) (Half) (double) val.Real;
                }
                if (typeof(TTo) == typeof(float))
                {
                    return (TTo) (object) (float) val.Real;
                }
                if (typeof(TTo) == typeof(double))
                {
                    return (TTo) (object) (double) val.Real;
                }
                if (typeof(TTo) == typeof(decimal))
                {
                    return (TTo) (object) (decimal) val.Real;
                }
                if (typeof(TTo) == typeof(sbyte))
                {
                    return (TTo) (object) (sbyte) val.Real;
                }
                if (typeof(TTo) == typeof(byte))
                {
                    return (TTo) (object) (byte) val.Real;
                }
                if (typeof(TTo) == typeof(short))
                {
                    return (TTo) (object) (short) val.Real;
                }
                if (typeof(TTo) == typeof(ushort))
                {
                    return (TTo) (object) (ushort) val.Real;
                }
                if (typeof(TTo) == typeof(int))
                {
                    return (TTo) (object) (int) val.Real;
                }
                if (typeof(TTo) == typeof(uint))
                {
                    return (TTo) (object) (uint) val.Real;
                }
                if (typeof(TTo) == typeof(long))
                {
                    return (TTo) (object) (long) val.Real;
                }
                if (typeof(TTo) == typeof(ulong))
                {
                    return (TTo) (object) (ulong) val.Real;
                }
                if (typeof(TTo) == typeof(Complex))
                {
                    return (TTo) (object) (Complex) val.Real;
                }
                if (typeof(TTo) == typeof(BigInteger))
                {
                    return (TTo) (object) (BigInteger) val.Real;
                }

                ThrowUnsupportedType();
                return default!;
            }

            if (typeof(TFrom) == typeof(BigInteger))
            {
                return FromBigInteger((BigInteger) (object) val);
            }

            [MethodImpl(MaxOpt)]
            static TTo FromBigInteger(BigInteger val)
            {
                if (typeof(TTo) == typeof(Half))
                {
                    return (TTo) (object) (Half) (double) val;
                }
                if (typeof(TTo) == typeof(float))
                {
                    return (TTo) (object) (float) val;
                }
                if (typeof(TTo) == typeof(double))
                {
                    return (TTo) (object) (double) val;
                }
                if (typeof(TTo) == typeof(decimal))
                {
                    return (TTo) (object) (decimal) val;
                }
                if (typeof(TTo) == typeof(sbyte))
                {
                    return (TTo) (object) (sbyte) val;
                }
                if (typeof(TTo) == typeof(byte))
                {
                    return (TTo) (object) (byte) val;
                }
                if (typeof(TTo) == typeof(short))
                {
                    return (TTo) (object) (short) val;
                }
                if (typeof(TTo) == typeof(ushort))
                {
                    return (TTo) (object) (ushort) val;
                }
                if (typeof(TTo) == typeof(int))
                {
                    return (TTo) (object) (int) val;
                }
                if (typeof(TTo) == typeof(uint))
                {
                    return (TTo) (object) (uint) val;
                }
                if (typeof(TTo) == typeof(long))
                {
                    return (TTo) (object) (long) val;
                }
                if (typeof(TTo) == typeof(ulong))
                {
                    return (TTo) (object) (ulong) val;
                }
                if (typeof(TTo) == typeof(Complex))
                {
                    return (TTo) (object) (Complex) val;
                }
                if (typeof(TTo) == typeof(BigInteger))
                {
                    return (TTo) (object) (BigInteger) val;
                }

                ThrowUnsupportedType();
                return default!;
            }

            ThrowUnsupportedType();
            return default!;
        }
    }
}
