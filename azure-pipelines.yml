name: 'CI-$(Build.BuildId)'

trigger:
- '*'

pr:
- '*'
  
jobs:
- job: Build

  pool:
    vmImage: 'ubuntu-latest'

  variables:
    buildConfiguration: 'Release'
    dotnetCoreVersion: '5.0.100-preview.6.20318.15'

  steps:
  - task: UseDotNet@2
    displayName: 'Install .NET 5.0'
    inputs:
      includePreviewVersions: true
      version: $(dotnetCoreVersion)
      
# Silk.NET.Maths Tests
  - script: dotnet run --project ./src/Maths/Silk.NET.Maths.Tests/Silk.NET.Maths.Tests.fsproj --configuration Release -- --nunit-summary TestResults.xml
    displayName: 'Run Tests and Export NUnit'
  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: 'Publish Maths Tests'
    inputs:
      testRunner: NUnit
      testResultsFiles: 'TestResults.xml'
  - script: dotnet test ./src/Maths/Silk.NET.Maths.Tests/Silk.NET.Maths.Tests.fsproj --configuration Release /p:AltCover=true /p:AltCoverCobertura="cobertura.xml" -- --nunit-summary TestResults.xml
    displayName: 'Collect Coverage'
    condition: succeededOrFailed()
  - task: PublishCodeCoverageResults@1
    condition: succeededOrFailed()
    inputs:
      codeCoverageTool: 'cobertura'
      summaryFileLocation: ./src/Maths/Silk.NET.Maths.Tests/cobertura.xml
  - script: |
    bash <(curl -s https://codecov.io/bash)
  displayName: 'Upload to codecov.io'
  condition: succeededOrFailed()
  
  - script: dotnet pack --configuration $(buildConfiguration) --version-suffix build$(Build.BuildId)
    displayName: 'Build/Pack'
  - publish: build/output_packages
    artifact: NuGet Packages
  - task: NuGetCommand@2
    condition: ne(variables['Build.Reason'], 'PullRequest')
    inputs:
      command: 'push'
      packagesToPush: 'build/output_packages/*.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: '061abec9-b10b-4a9b-9c06-aa635c5e74a2/7ae6c815-0dc0-4193-bf95-042c360df875'
