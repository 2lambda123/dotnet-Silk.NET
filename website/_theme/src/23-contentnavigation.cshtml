@using Raisin.Plugins.TableOfContents;
@using Raisin.Core;
@using HtmlAgilityPack;
@using System.Linq;

@{
    static string GetPageToC(string html)
    {
        var htmlDocument = new HtmlDocument();
        htmlDocument.LoadHtml(html);
        var currentHeaderLevel = 1;
        var started = false;
        var ret = string.Empty;
        foreach (HtmlNode node in htmlDocument.DocumentNode?.SelectNodes("//*[self::h1 or self::h2 or self::h3 or self::h4 or self::h5 or self::h6]") ?? Enumerable.Empty<HtmlNode>())
        {
            if (!started)
            {
                ret += "<ul class=\"section-nav\">";
                started = true;
            }

            var thisHeaderLevel = ((int)node.Name[1]) - ((int)'0');
            IndentIfNeeded(ref currentHeaderLevel, thisHeaderLevel, ref ret);
            OutdentIfNeeded(ref currentHeaderLevel, thisHeaderLevel, ref ret);
            ret += $"<li class=\"toc-entry toc-{node.Name}\">";
            var id = node.GetAttributeValue("id", null);
            if (id is not null)
            {
                ret += $"<a href=\"#{id}\">{node.InnerText}</a>";
            }
            else
            {
                ret += $"<a>{node.InnerText}</a>";
            }

            ret += "</li>";
        }

        OutdentIfNeeded(ref currentHeaderLevel, 1, ref ret);
        if (started)
        {
            ret += "</ul>";
        }

        return ret;
    }

    static void IndentIfNeeded(ref int currentHeaderLevel, int thisHeaderLevel, ref string ret)
    {
        for (; currentHeaderLevel < thisHeaderLevel; currentHeaderLevel++)
        {
            ret += "<ul>";
        }
    }

    static void OutdentIfNeeded(ref int currentHeaderLevel, int thisHeaderLevel, ref string ret)
    {
        for (; currentHeaderLevel > thisHeaderLevel; currentHeaderLevel--)
        {
            ret += "</ul>";
        }
    }
}


<div class="d-none d-xl-block col-xl-2 ct-toc">
    @if (Model is TableOfContentsModel tocModel)
    {
        Model = tocModel.BaseModel;
    }

    @if (Model is HtmlModel htmlModel)
    {
        @Raw(GetPageToC(htmlModel.Html))
    }
</div>